--------------------------------------------------------------------------------
Profile data file 'callgrind.out.19279' (creator: callgrind-3.13.0)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 3678516
Trigger: Program termination
Profiled target:  ./test_bump samples/pattern-realloc.script (PID 19279, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
    Ir 
--------------------------------------------------------------------------------
68,564  PROGRAM TOTALS

--------------------------------------------------------------------------------
    Ir  file:function
--------------------------------------------------------------------------------
55,672  /build/glibc-2ORdQG/glibc-2.27/string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms [/lib/x86_64-linux-gnu/libc-2.27.so]
 5,489  bump.c:myrealloc [/home/ubuntu/environment/cs107/assign7/test_bump]
 3,390  bump.c:mymalloc [/home/ubuntu/environment/cs107/assign7/test_bump]
 2,495  /usr/include/x86_64-linux-gnu/bits/string_fortified.h:myrealloc
 1,356  bump.c:roundup [/home/ubuntu/environment/cs107/assign7/test_bump]

--------------------------------------------------------------------------------
-- Auto-annotated source: bump.c
--------------------------------------------------------------------------------
   Ir 

-- line 21 ----------------------------------------
    .  
    .  
    .  /* Function: roundup
    .   * -----------------
    .   * This function rounds up the given number to the given multiple, which
    .   * must be a power of 2, and returns the result.  (you saw this code in lab1!).
    .   */
    .  size_t roundup(size_t sz, size_t mult) {
1,017      return (sz + mult - 1) & ~(mult - 1);
  339  }
    .  
    .  /* Function: myinit
    .   * ----------------
    .   * This function initializes our global variables based on the specified
    .   * segment boundary parameters.
    .   */
    .  bool myinit(void *start, size_t size) {
    .      segment_start = start;
-- line 38 ----------------------------------------
-- line 43 ----------------------------------------
    .  
    .  /* Function: mymalloc
    .   * ------------------
    .   * This function satisfies an allocation request by placing
    .   * the allocated block at the end of the heap.  No search means
    .   * it is fast, but no memory recycling means very poor utilization.
    .   */
    .  void *mymalloc(size_t requestedsz) {
  678      size_t needed = roundup(requestedsz, ALIGNMENT);
1,356  => bump.c:roundup (838x)
1,356      if (needed + nused > segment_size) {
    .          return NULL;
    .      }
  678      void *ptr = (char *)segment_start + nused;
  339      nused += needed;
  339      return ptr;
    .  }
    .  
    .  /* Function: myfree
    .   * ----------------
    .   * This function does nothing - fast!... but lame :(
    .   */
  162  void myfree(void *ptr) {}
    .  
    .  /* Function: realloc
    .   * -----------------
    .   * This function satisfies requests for resizing previously-allocated memory
    .   * blocks by allocating a new block of the requested size and moving the
    .   * existing contents to that region.  It's not particularly efficient.
    .   */
2,495  void *myrealloc(void *oldptr, size_t newsz) {
  998      void *newptr = mymalloc(newsz);
    .      memcpy(newptr, oldptr, newsz);
    .      myfree(oldptr);
    .      return newptr;
1,996  }
    .  
    .  /* Function: validate_heap
    .   * -----------------------
    .   * This function checks for potential errors/inconsistencies in the heap data
    .   * structures and returns false if there were issues, or true otherwise.
    .   * This implementation checks if the allocator has used more space than is
    .   * available.
    .   */
-- line 85 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/x86_64-linux-gnu/bits/string_fortified.h
--------------------------------------------------------------------------------
   Ir 

-- line 26 ----------------------------------------
    .  __warndecl (__warn_memset_zero_len,
    .  	    "memset used with constant zero length parameter; this could be due to transposed parameters");
    .  #endif
    .  
    .  __fortify_function void *
    .  __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
    .  	       size_t __len))
    .  {
2,495    return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
55,672  => /build/glibc-2ORdQG/glibc-2.27/string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms (499x)
    .  }
    .  
    .  __fortify_function void *
    .  __NTH (memmove (void *__dest, const void *__src, size_t __len))
    .  {
    .    return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
    .  }
    .  
-- line 42 ----------------------------------------

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  /build/glibc-2ORdQG/glibc-2.27/string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S

--------------------------------------------------------------------------------
Ir 
--------------------------------------------------------------------------------
19  percentage of events annotated

